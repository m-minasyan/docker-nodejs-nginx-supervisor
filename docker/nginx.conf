worker_processes     auto;
worker_rlimit_nofile 65535;

events {
    multi_accept       on;
    worker_connections 65535;
}

http {
    charset                utf-8;
    sendfile               on;
    tcp_nopush             on;
    tcp_nodelay            on;
    server_tokens          off;
    log_not_found          off;
    types_hash_max_size    2048;
    types_hash_bucket_size 64;
    client_max_body_size   16M;

    include                mime.types;
    default_type           application/octet-stream;

    access_log             off;
    error_log              /dev/null;

    # Configuration for WebSocket and connection upgrades
    map $http_upgrade $connection_upgrade {
        default upgrade;
        ""      close;
    }

    # Mapping real client IP address for proxied requests
    map $remote_addr $proxy_forwarded_elem {
        ~^[0-9.]+$        "for=$remote_addr";
        ~^[0-9A-Fa-f:.]+$ "for=\"[$remote_addr]\"";
        default           "for=unknown";
    }

    server {
        listen 80;

        # Customized logging and error handling
        access_log /dev/stdout combined buffer=512k flush=1m;
        error_log  /dev/stderr warn;

        # Security headers for enhanced safety
        # XSS Protection, Content-Type sniffing protection, Referrer Policy, CSP, Permissions Policy
        add_header X-XSS-Protection "1; mode=block" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header Referrer-Policy "no-referrer-when-downgrade" always;
        add_header Content-Security-Policy "default-src 'self' http: https: ws: wss: data: blob: 'unsafe-inline'; frame-ancestors 'self';" always;
        add_header Permissions-Policy "interest-cohort=()" always;

        # Proxy headers to pass to the Node.js application
        proxy_set_header Host $host;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Forwarded $proxy_forwarded_elem;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Port $server_port;
        proxy_http_version 1.1;
        proxy_cache_bypass $http_upgrade;
        proxy_ssl_server_name on;

        # Proxy timeouts for better control over connections
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;

        # Proxy configuration to pass requests to the Node.js app
        location / {
            if ($bad_request) {
                return 400;
            }
            proxy_pass http://127.0.0.1:3000$uri$is_args$args;
        }
    }
}
